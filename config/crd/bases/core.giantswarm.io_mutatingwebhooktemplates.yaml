---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: mutatingwebhooktemplates.core.giantswarm.io
spec:
  group: core.giantswarm.io
  names:
    kind: MutatingWebhookTemplate
    listKind: MutatingWebhookTemplateList
    plural: mutatingwebhooktemplates
    singular: mutatingwebhooktemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MutatingWebhookTemplate is the Schema for the mutatingwebhooktemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MutatingWebhookTemplateSpec defines the desired state of
              MutatingWebhookTemplate
            properties:
              handler:
                description: Handler specifies what handles webhook requests.
                properties:
                  service:
                    description: "Service is a reference to the service for this webhook.
                      Either Service or URL must be specified. \n If the webhook is
                      running within the cluster, then you should use Service."
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                      path:
                        description: Path used for the webhook. If Path is not set,
                          then PathStyle must be set.
                        type: string
                      pathStyle:
                        description: PathStyle is a style of service path used for
                          the webhook, e.g. KubebuilderWebhookPathStyle. If PathStyle
                          is not set, then Path must be set.
                        type: string
                      port:
                        type: integer
                    required:
                    - name
                    - namespace
                    type: object
                  url:
                    description: "URL gives the location of the webhook, in standard
                      URL form (`scheme://host:port/path`). Exactly one of URL or
                      Service must be specified. \n The `host` should not refer to
                      a service running in the cluster; use the Service field instead.
                      The host might be resolved via external DNS in some apiservers
                      (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that
                      would be a layering violation). `host` may also be an IP address.
                      \n Please note that using `localhost` or `127.0.0.1` as a `host`
                      is risky unless you take great care to run this webhook on all
                      hosts which run an apiserver which might need to make calls
                      to this webhook. Such installs are likely to be non-portable,
                      i.e., not easy to turn up in a new cluster. \n The scheme must
                      be \"https\"; the URL must begin with \"https://\". \n A path
                      is optional, and if present may be any string permissible in
                      a URL. You may use the path to pass an arbitrary string to the
                      webhook, for example, a cluster identifier. \n Attempting to
                      use a user or basic auth e.g. \"user:password@\" is not allowed.
                      Fragments (\"#...\") and query parameters (\"?...\") are not
                      allowed, either."
                    type: string
                type: object
              ignoreErrors:
                description: IgnoreErrors is a flag specifying if the webhook errors
                  should be ignored or not. Errors are not ignored by default.
                type: boolean
              objectSelector:
                description: ObjectSelector decides whether to run the webhook based
                  on if the object has matching labels. objectSelector is evaluated
                  against both the oldObject and newObject that would be sent to the
                  webhook, and is considered to match if either object matches the
                  selector. A null object (oldObject in the case of create, or newObject
                  in the case of delete) or an object that cannot have labels (like
                  a DeploymentRollback or a PodProxyOptions object) is not considered
                  to match. Use the object selector only if the webhook is opt-in,
                  because end users may skip the admission webhook by setting the
                  labels. Default to the empty LabelSelector, which matches everything.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              reinvocationPolicy:
                description: ReinvocationPolicyType specifies what type of policy
                  the admission hook uses.
                type: string
            required:
            - handler
            type: object
          status:
            description: MutatingWebhookTemplateStatus defines the observed state
              of MutatingWebhookTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
